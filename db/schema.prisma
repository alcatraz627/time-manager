datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id       String  @id @default(cuid())
    email    String  @unique
    name     String?
    avatar   String?
    password String

    preferences Json     @default("{\"data\": \"\"}") // TODO: specify details
    created_at  DateTime @default(now())
    updated_at  DateTime @updatedAt

    boards   Board[]
    Note     Note[]
    Schedule Schedule[]
}

model Board {
    id         String   @id @default(cuid())
    title      String
    icon       String?
    content    Json     @default("{\"links\": []}") // TODO: specify details
    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
    User       User?    @relation(fields: [userId], references: [id])
    userId     String?
    notes      Note[]
}

model Note {
    id      String   @id @default(cuid())
    title   String   @default("")
    type    NoteType @default(Task)
    icon    String?
    content Json     @default("{\"data\": []}") // TODO: specify details

    Board   Board?  @relation(fields: [boardId], references: [id])
    boardId String?

    User       User?     @relation(fields: [userId], references: [id])
    userId     String?
    reminder   Schedule? @relation(fields: [reminderId], references: [id])
    reminderId String?
    created_at DateTime  @default(now())
    updated_at DateTime  @updatedAt
}

enum NoteType {
    Task
    Goal
    Event
    Note
}

model Schedule {
    id      String  @id @default(cuid())
    title   String?
    cadence Json    @default("{\"data\": {}}")
    Note    Note[]

    User   User?   @relation(fields: [userId], references: [id])
    userId String?

    created_at DateTime @default(now())
    updated_at DateTime @updatedAt
}
